{"version":3,"sources":["components/Footer.js","components/GameBoard.js","components/GameBoardFooter.js","components/GameBoardHeader.js","components/Header.js","components/Layout.js","App.js","actions/index.js","registerServiceWorker.js","reducers/index.js","index.js"],"names":["Footer","className","GameBoard","props","handleClick","bind","this","drawGrid","grid","height","width","ctx","canvas","getContext","cellHeight","length","cellWidth","fillStyle","strokeStyle","fillRect","forEach","rowArr","row","isAlive","col","strokeRect","event","window","getComputedStyle","borderLeftWidth","borderTopWidth","addCell","clickX","clientX","parseFloat","offsetLeft","clickY","clientY","offsetTop","Math","floor","onClick","ref","Component","GameBoardFooter","changeSize","changeSpeed","delay","gridWidth","handleSizeChange","target","textContent","split","map","Number","numCols","numRows","handleSpeedChange","gridIsLarge","GameBoardHeader","clear","generation","pause","start","pText","String","id","Header","href","rel","handleActionBtns","action","btn","document","getElementById","classList","remove","setTimeout","add","Layout","interval","setInterval","run","prevProps","clearInterval","gridHeight","App","connect","state","dispatch","cellCol","cellRow","type","payload","30","50","80","70","100","Slow","Medium","Fast","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","nextGen","aliveNeighbors","r","c","randomGrid","Array","from","random","initialState","screenWidth","innerWidth","getInitialState","reducer","slice","store","createStore","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f3da7b2b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"main-footer\">\r\n    Cells can be added while the game is running. Clicking &#39;Board Size&#39; buttons\r\n    generates a random configuration for that board at your current speed.\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\n\r\nclass GameBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.drawGrid();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.drawGrid();\r\n  }\r\n\r\n  drawGrid() {\r\n    const { grid, height, width } = this.props;\r\n    const ctx = this.canvas.getContext('2d');\r\n    const cellHeight = height / grid.length;\r\n    const cellWidth = width / grid[0].length;\r\n    ctx.fillStyle = 'black';\r\n    ctx.strokeStyle = '#343436';\r\n    ctx.fillRect(0, 0, width, height);\r\n    ctx.fillStyle = 'BlueViolet';\r\n    grid.forEach((rowArr, row) => rowArr.forEach((isAlive, col) => {\r\n      ctx.strokeRect(col * cellWidth, row * cellHeight, cellWidth, cellHeight);\r\n      if (isAlive) {\r\n        ctx.fillRect(col * cellWidth, row * cellHeight, cellWidth, cellHeight);\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleClick(event) {\r\n    const { borderLeftWidth, borderTopWidth } = window.getComputedStyle(this.canvas);\r\n    const {\r\n      addCell, grid, height, width,\r\n    } = this.props;\r\n    const clickX = event.clientX - parseFloat(borderLeftWidth, 10) - this.canvas.offsetLeft;\r\n    const clickY = event.clientY - parseFloat(borderTopWidth, 10) - this.canvas.offsetTop;\r\n    const cellHeight = height / grid.length;\r\n    const cellWidth = width / grid[0].length;\r\n    const cellCol = Math.floor(clickX / cellWidth);\r\n    const cellRow = Math.floor(clickY / cellHeight);\r\n    addCell(cellCol, cellRow);\r\n  }\r\n\r\n  render() {\r\n    const { height, width } = this.props;\r\n    return (\r\n      <canvas\r\n        height={height}\r\n        onClick={this.handleClick}\r\n        ref={(canvas) => { this.canvas = canvas; }}\r\n        width={width}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nGameBoard.propTypes = {\r\n  addCell: PropTypes.func.isRequired,\r\n  grid: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.bool)).isRequired,\r\n  height: PropTypes.number.isRequired,\r\n  width: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default GameBoard;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst GameBoardFooter = ({\r\n  changeSize, changeSpeed, delay, gridWidth,\r\n}) => {\r\n  const handleSizeChange = (event) => {\r\n    const [numCols, numRows] = event.target.textContent.split(' x ').map(Number);\r\n    changeSize(numCols, numRows);\r\n  };\r\n  const handleSpeedChange = (event) => { changeSpeed(event.target.textContent); };\r\n\r\n  const gridIsLarge = gridWidth > 450;\r\n  const className = gridIsLarge\r\n    ? 'game-board-footer'\r\n    : 'game-board-footer game-board-footer--mobile';\r\n\r\n  return (\r\n    <footer className={className}>\r\n      {gridIsLarge && <p>Board Size:</p>}\r\n      {gridIsLarge &&\r\n        <button\r\n          className={gridWidth === 700 ? 'btn--size btn--active' : 'btn--size'}\r\n          onClick={handleSizeChange}\r\n        >50 x 30\r\n        </button>}\r\n      {gridIsLarge &&\r\n        <button\r\n          className={gridWidth === 840 ? 'btn--size btn--active' : 'btn--size'}\r\n          onClick={handleSizeChange}\r\n        >70 x 50\r\n        </button>}\r\n      {gridIsLarge &&\r\n        <button\r\n          className={gridWidth === 1000 ? 'btn--size btn--active' : 'btn--size'}\r\n          onClick={handleSizeChange}\r\n        >100 x 80\r\n        </button>}\r\n      {gridIsLarge && <p>Sim Speed:</p>}\r\n      <button\r\n        className={delay === 210 ? 'btn--speed btn--active' : 'btn-speed'}\r\n        onClick={handleSpeedChange}\r\n      >Slow\r\n      </button>\r\n      <button\r\n        className={delay === 140 ? 'btn--speed btn--active' : 'btn-speed'}\r\n        onClick={handleSpeedChange}\r\n      >Medium\r\n      </button>\r\n      <button\r\n        className={delay === 70 ? 'btn--speed btn--active' : 'btn-speed'}\r\n        onClick={handleSpeedChange}\r\n      >Fast\r\n      </button>\r\n    </footer>\r\n  );\r\n};\r\n\r\nGameBoardFooter.propTypes = {\r\n  changeSize: PropTypes.func.isRequired,\r\n  changeSpeed: PropTypes.func.isRequired,\r\n  delay: PropTypes.number.isRequired,\r\n  gridWidth: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default GameBoardFooter;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst GameBoardHeader = ({\r\n  clear, generation, gridWidth, pause, start,\r\n}) => {\r\n  const gridIsLarge = gridWidth > 450;\r\n  const className = gridIsLarge\r\n    ? 'game-board-header'\r\n    : 'game-board-header game-board-header--mobile';\r\n  const pText = gridIsLarge ? `Generation: ${generation}` : String(generation);\r\n  return (\r\n    <header className={className}>\r\n      <div />\r\n      <button id=\"run\" onClick={start}>Run</button>\r\n      <button id=\"pause\" onClick={pause}>Pause</button>\r\n      <button id=\"clear\" onClick={clear}>Clear</button>\r\n      <p>{pText}</p>\r\n    </header>\r\n  );\r\n};\r\n\r\nGameBoardHeader.propTypes = {\r\n  clear: PropTypes.func.isRequired,\r\n  generation: PropTypes.number.isRequired,\r\n  gridWidth: PropTypes.number.isRequired,\r\n  pause: PropTypes.func.isRequired,\r\n  start: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default GameBoardHeader;\r\n","import React from 'react';\r\n\r\nconst Header = () => (\r\n  <header className=\"main-header\">\r\n    Conway&#39;s Game of Life&nbsp;\r\n    <a\r\n      href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\"\r\n      rel=\"noopener noreferrer\"\r\n      target=\"_blank\"\r\n    >\r\n      (Click to learn more)\r\n    </a>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\n\r\nimport Footer from './Footer';\r\nimport GameBoard from './GameBoard';\r\nimport GameBoardFooter from './GameBoardFooter';\r\nimport GameBoardHeader from './GameBoardHeader';\r\nimport Header from './Header';\r\n\r\nconst handleActionBtns = (action) => {\r\n  const btn = document.getElementById(action);\r\n  if (action !== 'pause') {\r\n    document.getElementById('pause').classList.remove('btn--active');\r\n    setTimeout(() => btn.classList.remove('btn--active'), 750);\r\n  }\r\n  btn.classList.add('btn--active');\r\n};\r\n\r\nclass Layout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.clear = this.clear.bind(this);\r\n    this.pause = this.pause.bind(this);\r\n    this.start = this.start.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.props.run, this.props.delay);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.delay !== this.props.delay && this.interval) {\r\n      clearInterval(this.interval);\r\n      this.interval = setInterval(this.props.run, this.props.delay);\r\n    }\r\n  }\r\n\r\n  componenWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  clear() {\r\n    clearInterval(this.interval);\r\n    this.interval = 0;\r\n    this.props.clear();\r\n    handleActionBtns('clear');\r\n  }\r\n\r\n  pause() {\r\n    clearInterval(this.interval);\r\n    this.interval = 0;\r\n    handleActionBtns('pause');\r\n  }\r\n\r\n  start() {\r\n    if (this.interval === 0) {\r\n      this.interval = setInterval(this.props.run, this.props.delay);\r\n      handleActionBtns('run');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      addCell, changeSize, changeSpeed, delay, grid, generation, gridHeight, gridWidth,\r\n    } = this.props;\r\n    return (\r\n      <main>\r\n        <Header />\r\n        <GameBoardHeader\r\n          generation={generation}\r\n          gridWidth={gridWidth}\r\n          clear={this.clear}\r\n          pause={this.pause}\r\n          start={this.start}\r\n        />\r\n        <GameBoard\r\n          addCell={addCell}\r\n          grid={grid}\r\n          height={gridHeight}\r\n          width={gridWidth}\r\n        />\r\n        <GameBoardFooter\r\n          changeSize={changeSize}\r\n          changeSpeed={changeSpeed}\r\n          delay={delay}\r\n          gridWidth={gridWidth}\r\n        />\r\n        <Footer />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  addCell: PropTypes.func.isRequired,\r\n  changeSize: PropTypes.func.isRequired,\r\n  changeSpeed: PropTypes.func.isRequired,\r\n  clear: PropTypes.func.isRequired,\r\n  delay: PropTypes.number.isRequired,\r\n  grid: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.bool)).isRequired,\r\n  generation: PropTypes.number.isRequired,\r\n  gridHeight: PropTypes.number.isRequired,\r\n  gridWidth: PropTypes.number.isRequired,\r\n  run: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Layout;\r\n","import { connect } from 'react-redux';\n\nimport Layout from './components/Layout';\nimport { addCell, changeSize, changeSpeed, clear, run } from './actions';\n\nconst mapStateToProps = (state) => {\n  const {\n    delay, generation, grid, gridHeight, gridWidth,\n  } = state;\n  return {\n    delay, generation, grid, gridHeight, gridWidth,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addCell: (cellCol, cellRow) => dispatch(addCell(cellCol, cellRow)),\n  changeSize: (numCols, numRows) => dispatch(changeSize(numCols, numRows)),\n  changeSpeed: delay => dispatch(changeSpeed(delay)),\n  clear: () => dispatch(clear()),\n  run: () => dispatch(run()),\n});\n\nconst App = connect(mapStateToProps, mapDispatchToProps)(Layout);\n\nexport default App;\n","export const addCell = (cellCol, cellRow) => ({\r\n  type: 'ADD_CELL',\r\n  payload: { cellCol, cellRow },\r\n});\r\n\r\nexport const changeSize = (numCols, numRows) => {\r\n  const gridHeights = { 30: 420, 50: 600, 80: 800 };\r\n  const gridWidths = { 50: 700, 70: 840, 100: 1000 };\r\n  return {\r\n    type: 'CHANGE_SIZE',\r\n    payload: {\r\n      gridHeight: gridHeights[numRows],\r\n      gridWidth: gridWidths[numCols],\r\n      numCols,\r\n      numRows,\r\n    },\r\n  };\r\n};\r\n\r\nexport const changeSpeed = (speed) => {\r\n  const delays = { Slow: 210, Medium: 140, Fast: 70 };\r\n  return {\r\n    type: 'CHANGE_SPEED',\r\n    payload: {\r\n      delay: delays[speed],\r\n    },\r\n  };\r\n};\r\n\r\nexport const clear = () => ({ type: 'CLEAR' });\r\n\r\nexport const run = () => ({ type: 'RUN' });\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const maxGridDims = (screenWidth) => {\r\n  let dims = {};\r\n  if (screenWidth < 500) {\r\n    dims = {\r\n      gridHeight: 180, gridWidth: 300, numCols: 25, numRows: 15,\r\n    };\r\n  } else if (screenWidth < 750) {\r\n    dims = {\r\n      gridHeight: 270, gridWidth: 450, numCols: 37, numRows: 23,\r\n    };\r\n  } else if (screenWidth < 900) {\r\n    dims = {\r\n      gridHeight: 420, gridWidth: 700, numCols: 50, numRows: 30,\r\n    };\r\n  } else if (screenWidth < 1075) {\r\n    dims = {\r\n      gridHeight: 600, gridWidth: 840, numCols: 70, numRows: 50,\r\n    };\r\n  } else {\r\n    dims = {\r\n      gridHeight: 800, gridWidth: 1000, numCols: 100, numRows: 80,\r\n    };\r\n  }\r\n  return dims;\r\n};\r\n\r\nconst nextGen = (grid) => {\r\n  const numRows = grid.length;\r\n  const numCols = grid[0].length;\r\n  return grid.map((rowArr, row) => rowArr.map((isAlive, col) => {\r\n    let aliveNeighbors = 0;\r\n    for (let r = row - 1; r <= row + 1; r++) {\r\n      for (let c = col - 1; c <= col + 1; c++) {\r\n        if (!(c === col && r === row)) {\r\n          const neighborIsAlive = grid[(r + numRows) % numRows][(c + numCols) % numCols];\r\n          if (neighborIsAlive) {\r\n            aliveNeighbors++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (isAlive) {\r\n      return aliveNeighbors > 1 && aliveNeighbors < 4;\r\n    }\r\n    return aliveNeighbors === 3;\r\n  }));\r\n};\r\n\r\nconst randomGrid = (numCols, numRows) =>\r\n  Array.from({ length: numRows }, () =>\r\n    Array.from({ length: numCols }, () => Math.random() >= 0.6));\r\n\r\nconst getInitialState = () => {\r\n  const {\r\n    gridHeight,\r\n    gridWidth,\r\n    numCols,\r\n    numRows,\r\n  } = maxGridDims(window.innerWidth);\r\n  return {\r\n    delay: 70,\r\n    generation: 0,\r\n    grid: randomGrid(numCols, numRows),\r\n    gridHeight,\r\n    gridWidth,\r\n  };\r\n};\r\n\r\nconst initialState = getInitialState();\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_CELL': {\r\n      const { cellCol, cellRow } = action.payload;\r\n      return {\r\n        ...state,\r\n        grid: [\r\n          ...state.grid.slice(0, cellRow),\r\n          [\r\n            ...state.grid[cellRow].slice(0, cellCol),\r\n            true,\r\n            ...state.grid[cellRow].slice(cellCol + 1),\r\n          ],\r\n          ...state.grid.slice(cellRow + 1),\r\n        ],\r\n      };\r\n    }\r\n    case 'CHANGE_SIZE': {\r\n      const {\r\n        gridHeight, gridWidth, numCols, numRows,\r\n      } = action.payload;\r\n      return {\r\n        ...state,\r\n        generation: 0,\r\n        grid: randomGrid(numCols, numRows),\r\n        gridHeight,\r\n        gridWidth,\r\n      };\r\n    }\r\n    case 'CHANGE_SPEED': {\r\n      return { ...state, delay: action.payload.delay };\r\n    }\r\n    case 'CLEAR': {\r\n      return {\r\n        ...state,\r\n        generation: 0,\r\n        grid: state.grid.map(rowArr => rowArr.map(() => false)),\r\n      };\r\n    }\r\n    case 'RUN': {\r\n      return { ...state, generation: state.generation + 1, grid: nextGen(state.grid) };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.getElementById('root'),\n);\nregisterServiceWorker();\n"],"sourceRoot":""}